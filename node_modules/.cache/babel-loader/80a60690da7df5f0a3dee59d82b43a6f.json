{"ast":null,"code":"var _jsxFileName = \"/Users/vladimirsmirnov/Desktop/BASE/REACT/MASTERY_JAVASCRIPT/jsvm_portfolio/frontend_react/src/container/Skills/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AiFillEye, AiFillGithub } from 'react-icons/ai';\nimport { motion } from 'framer-motion';\nimport ReactTooltip from 'react-tooltip';\nimport { AppWrap } from '../../wrapper';\nimport { urlFor, client } from '../../client';\nimport './Skills.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Skills = () => {\n  _s();\n\n  var _experience$works;\n\n  const [experience, setExperience] = useState([]);\n  const [skills, setSkills] = useState([]);\n  console.log(experience);\n  useEffect(() => {\n    const query = '*[_type == \"experiences\"]';\n    const skillsQuery = '*[_type == \"skills\"]';\n    client.fetch(query).then(data => {\n      setExperience(data);\n    });\n    client.fetch(skillsQuery).then(data => {\n      setSkills(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"head-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \" & Experience\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__skills-container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"app__skills-list\",\n        children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          whileInView: {\n            opacity: [0, 1]\n          },\n          transition: {\n            duration: 0.5\n          },\n          className: \"app__skills-item app__flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app__flex\",\n            style: {\n              backgroundColor: skill.bgColor\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: urlFor(skill.icon),\n              alt: skill.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-text\",\n            children: skill.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"app__skills-experience\",\n        children: experience === null || experience === void 0 ? void 0 : (_experience$works = experience.works) === null || _experience$works === void 0 ? void 0 : _experience$works.map(work => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            whileInView: {\n              opacity: [0, 1]\n            },\n            transition: {\n              duration: 0.5\n            },\n            className: \"app__skills-exp-work app__flex\",\n            \"data-tip\": true,\n            \"data-for\": work.name,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"bold-text\",\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"p-text\",\n              children: work.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, work.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        children: [\"id=\", work.name, \"effect='solid' arrowColor='#fff' className=skills-tooltip\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Skills, \"PDxa8gCZPuvO2Oa7o1V+rdxieu0=\");\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useState","useEffect","AiFillEye","AiFillGithub","motion","ReactTooltip","AppWrap","urlFor","client","Skills","experience","setExperience","skills","setSkills","console","log","query","skillsQuery","fetch","then","data","map","skill","index","opacity","duration","backgroundColor","bgColor","icon","name","works","work","company"],"sources":["/Users/vladimirsmirnov/Desktop/BASE/REACT/MASTERY_JAVASCRIPT/jsvm_portfolio/frontend_react/src/container/Skills/Skills.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AiFillEye, AiFillGithub } from 'react-icons/ai'\nimport { motion } from 'framer-motion'\nimport ReactTooltip from 'react-tooltip'\n\nimport { AppWrap } from '../../wrapper'\nimport { urlFor, client } from '../../client'\n\nimport './Skills.scss'\n\nconst Skills = () => {\n  const [experience, setExperience] = useState([])\n  const [skills, setSkills] = useState([])\n\n  console.log(experience)\n\n  useEffect(() => {\n    const query = '*[_type == \"experiences\"]'\n    const skillsQuery = '*[_type == \"skills\"]'\n\n    client.fetch(query).then((data) => {\n      setExperience(data)\n    })\n\n    client.fetch(skillsQuery).then((data) => {\n      setSkills(data)\n    })\n  }, [])\n  return (\n    <>\n      <h2 className='head-text'>\n        <span>Skills</span> & Experience\n      </h2>\n      <div className='app__skills-container'>\n        <motion.div className='app__skills-list'>\n          {skills.map((skill, index) => (\n            <motion.div\n              whileInView={{ opacity: [0, 1] }}\n              transition={{ duration: 0.5 }}\n              className='app__skills-item app__flex'\n              key={index}\n            >\n              <div\n                className='app__flex'\n                style={{ backgroundColor: skill.bgColor }}\n              >\n                <img src={urlFor(skill.icon)} alt={skill.name} />\n              </div>\n              <p className='p-text'>{skill.name}</p>\n            </motion.div>\n          ))}\n        </motion.div>\n        <motion.div className='app__skills-experience'>\n          {experience?.works?.map((work) => (\n            <>\n              <motion.div\n                whileInView={{ opacity: [0, 1] }}\n                transition={{ duration: 0.5 }}\n                className='app__skills-exp-work app__flex'\n                key={work.name}\n                data-tip\n                data-for={work.name}\n              >\n                <h4 className='bold-text'>{work.name}</h4>\n                <p className='p-text'>{work.company}</p>\n              </motion.div>\n            </>\n          ))}\n        </motion.div>\n        <ReactTooltip>\n          id={work.name}\n          effect='solid' arrowColor='#fff' className=skills-tooltip\n        </ReactTooltip>\n      </div>\n    </>\n  )\n}\n\nexport default Skills\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,gBAAxC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,cAA/B;AAEA,OAAO,eAAP;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAAA;;EACnB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;EAEAc,OAAO,CAACC,GAAR,CAAYL,UAAZ;EAEAT,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAG,2BAAd;IACA,MAAMC,WAAW,GAAG,sBAApB;IAEAT,MAAM,CAACU,KAAP,CAAaF,KAAb,EAAoBG,IAApB,CAA0BC,IAAD,IAAU;MACjCT,aAAa,CAACS,IAAD,CAAb;IACD,CAFD;IAIAZ,MAAM,CAACU,KAAP,CAAaD,WAAb,EAA0BE,IAA1B,CAAgCC,IAAD,IAAU;MACvCP,SAAS,CAACO,IAAD,CAAT;IACD,CAFD;EAGD,CAXQ,EAWN,EAXM,CAAT;EAYA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,WAAd;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE,QAAC,MAAD,CAAQ,GAAR;QAAY,SAAS,EAAC,kBAAtB;QAAA,UACGR,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,MAAD,CAAQ,GAAR;UACE,WAAW,EAAE;YAAEC,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ;UAAX,CADf;UAEE,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAZ,CAFd;UAGE,SAAS,EAAC,4BAHZ;UAAA,wBAME;YACE,SAAS,EAAC,WADZ;YAEE,KAAK,EAAE;cAAEC,eAAe,EAAEJ,KAAK,CAACK;YAAzB,CAFT;YAAA,uBAIE;cAAK,GAAG,EAAEpB,MAAM,CAACe,KAAK,CAACM,IAAP,CAAhB;cAA8B,GAAG,EAAEN,KAAK,CAACO;YAAzC;cAAA;cAAA;cAAA;YAAA;UAJF;YAAA;YAAA;YAAA;UAAA,QANF,eAYE;YAAG,SAAS,EAAC,QAAb;YAAA,UAAuBP,KAAK,CAACO;UAA7B;YAAA;YAAA;YAAA;UAAA,QAZF;QAAA,GAION,KAJP;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAmBE,QAAC,MAAD,CAAQ,GAAR;QAAY,SAAS,EAAC,wBAAtB;QAAA,UACGb,UADH,aACGA,UADH,4CACGA,UAAU,CAAEoB,KADf,sDACG,kBAAmBT,GAAnB,CAAwBU,IAAD,iBACtB;UAAA,uBACE,QAAC,MAAD,CAAQ,GAAR;YACE,WAAW,EAAE;cAAEP,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ;YAAX,CADf;YAEE,UAAU,EAAE;cAAEC,QAAQ,EAAE;YAAZ,CAFd;YAGE,SAAS,EAAC,gCAHZ;YAKE,gBALF;YAME,YAAUM,IAAI,CAACF,IANjB;YAAA,wBAQE;cAAI,SAAS,EAAC,WAAd;cAAA,UAA2BE,IAAI,CAACF;YAAhC;cAAA;cAAA;cAAA;YAAA,QARF,eASE;cAAG,SAAS,EAAC,QAAb;cAAA,UAAuBE,IAAI,CAACC;YAA5B;cAAA;cAAA;cAAA;YAAA,QATF;UAAA,GAIOD,IAAI,CAACF,IAJZ;YAAA;YAAA;YAAA;UAAA;QADF,iBADD;MADH;QAAA;QAAA;QAAA;MAAA,QAnBF,eAoCE,QAAC,YAAD;QAAA,kBACME,IAAI,CAACF,IADX;MAAA;QAAA;QAAA;QAAA;MAAA,QApCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAgDD,CAlED;;GAAMpB,M;;KAAAA,M;AAoEN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}